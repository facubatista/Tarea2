
package webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSClientes", targetNamespace = "http://WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSClientes {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "limpiar", targetNamespace = "http://WebServices/", className = "webservices.Limpiar")
    @ResponseWrapper(localName = "limpiarResponse", targetNamespace = "http://WebServices/", className = "webservices.LimpiarResponse")
    @Action(input = "http://WebServices/WSClientes/limpiarRequest", output = "http://WebServices/WSClientes/limpiarResponse")
    public void limpiar();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "cambiarEstado", targetNamespace = "http://WebServices/", className = "webservices.CambiarEstado")
    @ResponseWrapper(localName = "cambiarEstadoResponse", targetNamespace = "http://WebServices/", className = "webservices.CambiarEstadoResponse")
    @Action(input = "http://WebServices/WSClientes/cambiarEstadoRequest", output = "http://WebServices/WSClientes/cambiarEstadoResponse")
    public void cambiarEstado(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DataReservas
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarResDeCli", targetNamespace = "http://WebServices/", className = "webservices.ListarResDeCli")
    @ResponseWrapper(localName = "listarResDeCliResponse", targetNamespace = "http://WebServices/", className = "webservices.ListarResDeCliResponse")
    @Action(input = "http://WebServices/WSClientes/listarResDeCliRequest", output = "http://WebServices/WSClientes/listarResDeCliResponse")
    public DataReservas listarResDeCli(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "seleccionarReserva", targetNamespace = "http://WebServices/", className = "webservices.SeleccionarReserva")
    @ResponseWrapper(localName = "seleccionarReservaResponse", targetNamespace = "http://WebServices/", className = "webservices.SeleccionarReservaResponse")
    @Action(input = "http://WebServices/WSClientes/seleccionarReservaRequest", output = "http://WebServices/WSClientes/seleccionarReservaResponse")
    public void seleccionarReserva(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param a
     */
    @WebMethod
    @RequestWrapper(localName = "seleccionarProveedor", targetNamespace = "http://WebServices/", className = "webservices.SeleccionarProveedor")
    @ResponseWrapper(localName = "seleccionarProveedorResponse", targetNamespace = "http://WebServices/", className = "webservices.SeleccionarProveedorResponse")
    @Action(input = "http://WebServices/WSClientes/seleccionarProveedorRequest", output = "http://WebServices/WSClientes/seleccionarProveedorResponse")
    public void seleccionarProveedor(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws ParseException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "agregarServicioAreserva", targetNamespace = "http://WebServices/", className = "webservices.AgregarServicioAreserva")
    @ResponseWrapper(localName = "agregarServicioAreservaResponse", targetNamespace = "http://WebServices/", className = "webservices.AgregarServicioAreservaResponse")
    @Action(input = "http://WebServices/WSClientes/agregarServicioAreservaRequest", output = "http://WebServices/WSClientes/agregarServicioAreservaResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://WebServices/WSClientes/agregarServicioAreserva/Fault/ParseException")
    })
    public void agregarServicioAreserva(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws ParseException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "agregarPromoAreserva", targetNamespace = "http://WebServices/", className = "webservices.AgregarPromoAreserva")
    @ResponseWrapper(localName = "agregarPromoAreservaResponse", targetNamespace = "http://WebServices/", className = "webservices.AgregarPromoAreservaResponse")
    @Action(input = "http://WebServices/WSClientes/agregarPromoAreservaRequest", output = "http://WebServices/WSClientes/agregarPromoAreservaResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://WebServices/WSClientes/agregarPromoAreserva/Fault/ParseException")
    })
    public void agregarPromoAreserva(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userPassValido", targetNamespace = "http://WebServices/", className = "webservices.UserPassValido")
    @ResponseWrapper(localName = "userPassValidoResponse", targetNamespace = "http://WebServices/", className = "webservices.UserPassValidoResponse")
    @Action(input = "http://WebServices/WSClientes/userPassValidoRequest", output = "http://WebServices/WSClientes/userPassValidoResponse")
    public boolean userPassValido(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param a
     * @param b
     */
    @WebMethod
    @RequestWrapper(localName = "crearReserva", targetNamespace = "http://WebServices/", className = "webservices.CrearReserva")
    @ResponseWrapper(localName = "crearReservaResponse", targetNamespace = "http://WebServices/", className = "webservices.CrearReservaResponse")
    @Action(input = "http://WebServices/WSClientes/crearReservaRequest", output = "http://WebServices/WSClientes/crearReservaResponse")
    public void crearReserva(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        float b);

    /**
     * 
     * @param arg0
     * @return
     *     returns webservices.DataCliente
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataCliente", targetNamespace = "http://WebServices/", className = "webservices.GetDataCliente")
    @ResponseWrapper(localName = "getDataClienteResponse", targetNamespace = "http://WebServices/", className = "webservices.GetDataClienteResponse")
    @Action(input = "http://WebServices/WSClientes/getDataClienteRequest", output = "http://WebServices/WSClientes/getDataClienteResponse")
    public DataCliente getDataCliente(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verificarUsuario", targetNamespace = "http://WebServices/", className = "webservices.VerificarUsuario")
    @ResponseWrapper(localName = "verificarUsuarioResponse", targetNamespace = "http://WebServices/", className = "webservices.VerificarUsuarioResponse")
    @Action(input = "http://WebServices/WSClientes/verificarUsuarioRequest", output = "http://WebServices/WSClientes/verificarUsuarioResponse")
    public String verificarUsuario(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns boolean
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "crearUserWeb", targetNamespace = "http://WebServices/", className = "webservices.CrearUserWeb")
    @ResponseWrapper(localName = "crearUserWebResponse", targetNamespace = "http://WebServices/", className = "webservices.CrearUserWebResponse")
    @Action(input = "http://WebServices/WSClientes/crearUserWebRequest", output = "http://WebServices/WSClientes/crearUserWebResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://WebServices/WSClientes/crearUserWeb/Fault/ParseException")
    })
    public boolean crearUserWeb(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        byte[] arg6)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns webservices.DataReserva
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarReserva", targetNamespace = "http://WebServices/", className = "webservices.MostrarReserva")
    @ResponseWrapper(localName = "mostrarReservaResponse", targetNamespace = "http://WebServices/", className = "webservices.MostrarReservaResponse")
    @Action(input = "http://WebServices/WSClientes/mostrarReservaRequest", output = "http://WebServices/WSClientes/mostrarReservaResponse")
    public DataReserva mostrarReserva(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
